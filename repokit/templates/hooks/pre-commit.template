#!/bin/sh
# Pre-commit hook to prevent committing private content to public branches
# Generated by RepoKit using BranchContext patterns

# Get current branch name
current_branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "unknown")

# Define private branches where private content is allowed (from BranchContext)
case "$current_branch" in
    $private_branch_patterns)
        echo "Checking for private content on branch: $current_branch"
        exit 0
        ;;
    $public_branch_patterns)
        echo "üîç RepoKit Pre-Commit Check"
        echo "   Branch: $current_branch (public)"
        ;;
    *)
        echo "üîç RepoKit Pre-Commit Check"
        echo "   Branch: $current_branch (public)"
        ;;
esac

# Check for private content using BranchContext patterns
has_private_content=0
for file in $(git diff --cached --name-only); do
    # Check against all private content patterns from BranchContext
    if echo "$file" | grep -q -E "$private_content_regex"; then
        if [ $has_private_content -eq 0 ]; then
            echo ""
            echo "‚ùå COMMIT BLOCKED - Private Content Protection"
            echo ""
            echo "ERROR: Attempting to commit private files to public branch '$current_branch':"
            echo ""
            has_private_content=1
        fi
        echo "  - $file"
    fi
done

if [ $has_private_content -eq 1 ]; then
    echo ""
    echo "These files should only exist in private branches."
    echo "To fix this:"
    echo "  1. Switch to private branch: git checkout private"
    echo "  2. Or unstage these files: git reset HEAD <file>"
    echo "  3. Or remove from working directory: rm <file>"
    echo ""
    exit 1
fi

# Check for large files (>10MB)
for file in $(git diff --cached --name-only); do
    if [ -f "$file" ]; then
        size=$(du -k "$file" | awk '{print $1}')
        if [ "$size" -gt 10240 ]; then
            echo "ERROR: File $file is too large ($size KB)"
            echo "Consider using Git LFS or add to .gitignore"
            exit 1
        fi
    fi
done

exit 0
