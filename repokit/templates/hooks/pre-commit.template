#!/bin/sh
# Pre-commit hook to prevent committing private content to public branches
# Generated by RepoKit using BranchContext patterns

# Get current branch name
current_branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "unknown")

# Define private branches where private content is allowed (from BranchContext)
case "$current_branch" in
    {{private_branch_patterns}})
        echo "Private content allowed on branch: $current_branch"
        exit 0
        ;;
    {{public_branch_patterns}})
        echo "Checking for private content on public branch: $current_branch"
        ;;
    *)
        echo "Checking for private content on branch: $current_branch"
        ;;
esac

# Check for private content using BranchContext patterns
for file in $(git diff --cached --name-only); do
    # Check against all private content patterns from BranchContext
    if echo "$file" | grep -q -E "{{private_content_regex}}"; then
        echo "ERROR: Attempting to commit private content: $file"
        echo "Private content should not be committed to public branches."
        echo "These files should only exist in private branches."
        exit 1
    fi
done

# Check for large files (>10MB)
for file in $(git diff --cached --name-only); do
    if [ -f "$file" ]; then
        size=$(du -k "$file" | awk '{print $1}')
        if [ "$size" -gt 10240 ]; then
            echo "ERROR: File $file is too large ($size KB)"
            echo "Consider using Git LFS or add to .gitignore"
            exit 1
        fi
    fi
done

exit 0
